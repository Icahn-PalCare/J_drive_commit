= V4 Outline MultiLine NoSorting TabWidth=30

H="First Heading"
/* 
********************HEADING******************** 

Project Name: Climate Change

Date Started: 3/2019

Primary Investigator: Laura Gelfman

Created by: MH

Primary Analyst: MH
Secondary Analyst:


Simple Outline:


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Intermediate Data Path
global intpath "E:\nhats\data\Projects\..."

// Final Data Path
gloabl datapath "E:\nhats\data\Projects\..."

//Log files path
gloabl logpath "E:\nhats\data\Projects\..."


SAS 


//Intermediate Data Path
libname intpath "E:\nhats\data\Projects\..."

// Final Data Path
libname datapath "E:\nhats\data\Projects\..."

//Log files path
libname logpath "E:\nhats\data\Projects\..."


H="test"
/* 
********************HEADING******************** 

Project Name:

Date Started:

Primary Investigator:

Created by:

Primary Analyst:
Secondary Analyst:


Simple Outline:


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Intermediate Data Path
global intpath "E:\nhats\data\Projects\..."

// Final Data Path
gloabl datapath "E:\nhats\data\Projects\..."

//Log files path
gloabl logpath "E:\nhats\data\Projects\..."


SAS 


//Intermediate Data Path
libname intpath "E:\nhats\data\Projects\..."

// Final Data Path
libname datapath "E:\nhats\data\Projects\..."

//Log files path
libname logpath "E:\nhats\data\Projects\..."


H="kinless tables "
global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit.dta", clear
svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

gen flag_1_biol_kid = .
replace flag_1_biol_kid=1 if hasownkid==1
replace flag_1_biol_kid=0 if hasownkid==0

gen flag_2_any_kid = .
replace flag_2_any_kid=1 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=0 if hasanykid==0 | (flag_2_any_kid==. & child==0)

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =1 if flag_2_any_kid==1 | married==1
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 & married==0
replace flag_3=1 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)


gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =1 if flag_3_any_kid_married==1 | parent_liv==1
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 & parent_liv==0

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=1 if flag_4_any_kid_married_parent==1 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 & liv_sib==0

/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
label define tothlp 1 "1" 2 "2" 3 "3+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox



gen hlphrs_i_com=hlphrs_i if nhres_n1==0
gen hlphrs_p_com=hlphrs_p if nhres_n1==0

foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1
/////1-r(mean) used here BE CAREFUL!


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		tab `x' female if died_one_year==1 & age1>=50, chi2
		mat tab[`r',3]=r(p)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comaprison between male and female groups")


//table 2
/////1-r(mean) used here BE CAREFUL!

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		tab `x' female if died_one_year==1 & age1>=50, chi2
		mat tab[`r',3]=r(p)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important  

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Kinless" "Has Kin" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)

//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i hlphrs_p 
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==1
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 1" "Total number of hlprs 2" "Total number of hlprs 3+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Kinless" "Has Kin" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")



drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i hlphrs_p 
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==0
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 1" "Total number of hlprs 2" "Total number of hlprs 3+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Kinless" "Has Kin" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


local cvar months_bet
local ivar proxy_core proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 


local rn: word count `cvar' `ivar' 1 1 1
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==1
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar'  "N" "Estimate"
mat colnames tab = "Kinless" "Has Kin" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


local cvar months_bet
local ivar proxy_core proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 


local rn: word count `cvar' `ivar' 1 1 1
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==0
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar'  "N" "Estimate"
mat colnames tab = "Kinless" "Has Kin" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbots: Never or almost never"

local m1 flag_3_any_kid_married age1 female race education2 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs cesd_tot_ge3 n_i_cat1 n_i_cat2

local m3 isolated  liv_alone paid_helper discuss dexp

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death race
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death race
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace


H="kinless tables new"
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\HRS\base_data\Rand downloads\randhrs1992_2016v2.dta" , clear 

keep hhidpn r*mpart
rename r*mpart part_*

reshape long part_, i(hhidpn) j(year)


local b=0
forvalues i=1/13{
replace year=1992+`b' if year==`i'
local b=`b'+2
}


rename year core_year
gen partner=.
replace partner=0 if part_==0
replace partner=1 if part_==1
tab partner


tempfile partner
save "`partner'"

clear all

global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit.dta", clear

destring id, gen(hhidpn)

merge 1:1 hhidpn core_year using "`partner'",  keepusing(partner) keep(master match) nogen

svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
//drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

//Flags defined as being Kinless 

gen flag_1_biol_kid = .
replace flag_1_biol_kid=0 if hasownkid==1
replace flag_1_biol_kid=1 if hasownkid==0

gen flag_2_any_kid = .
replace flag_2_any_kid=0 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=1 if hasanykid==0 | (flag_2_any_kid==. & child==0)

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 | married==1 | partner==1
replace flag_3_any_kid_married =1 if flag_2_any_kid==1 & married==0 & partner==0
replace flag_3=0 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)

gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 | parent_liv==1
replace flag_4_any_kid_married_parent =1 if flag_3_any_kid_married==1 & parent_liv==0

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=1 if flag_4_any_kid_married_parent==1 & liv_sib==0

/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

replace n_i=0 if n_i==.
gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

replace n_f=0 if n_f==.
gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

replace n_p=0 if n_p==.
gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

replace n_hp=0 if n_hp==.
gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==0
replace n_hp_cat=2 if n_hp==1
replace n_hp_cat=3 if n_hp>=2 & !missing(n_hp)
label define tothlp 1 "0" 2 "1" 3 "2+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox

foreach x in hlphrs_s hlphrs_u hlphrs_i hlphrs_k hlphrs_p kid_adult_hlphrs ksp_hlphrs kid_adult_sp_hlphrs{
gen `x'_wk=0
replace `x'_wk=`x'/4.29
}

gen hlphrs_f_wk=hlphrs_i_wk+hlphrs_p_wk
label var hlphrs_f_wk "Hours of help from total helpers (formal and informal), per week"

label var hlphrs_i "Hours of help from total informal helpers (spouse and other), per week"
label var hlphrs_p "Hours of help from paid helpers (excludes institutional employees), per week"

gen hlphrs_i_wk_com=hlphrs_i_wk if nhres_n1==0
gen hlphrs_p_wk_com=hlphrs_p_wk if nhres_n1==0


foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
//label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
//label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1--- 1 minus used here to get inverse. 
/////


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comparison between male and female groups")


//table 2
/////

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=`r(mean)'*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important  

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)
label var n_ins "Number of institutional helpers"
//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")



drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==1
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core


local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop (if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbots: Never or almost never"

local m1  age1 female race education2 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs cesd_tot_ge3 /*n_i_cat1 n_i_cat2*/

local m3 /*isolated liv_alone paid_helper discuss */ dexp


svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

H="1/14 kinless tables"
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\HRS\base_data\Rand downloads\randhrs1992_2016v2.dta" , clear 

keep hhidpn r*mpart
rename r*mpart part_*

reshape long part_, i(hhidpn) j(year)


local b=0
forvalues i=1/13{
replace year=1992+`b' if year==`i'
local b=`b'+2
}


rename year core_year
gen partner=.
replace partner=0 if part_==0
replace partner=1 if part_==1
tab partner


tempfile partner
save "`partner'"

clear all

global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit.dta", clear

destring id, gen(hhidpn)

merge 1:1 hhidpn core_year using "`partner'",  keepusing(partner) keep(master match) nogen

svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
//drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

//Flags defined as being Kinless 

gen flag_1_biol_kid = .
replace flag_1_biol_kid=0 if hasownkid==1
replace flag_1_biol_kid=1 if hasownkid==0

gen flag_2_any_kid = .
replace flag_2_any_kid=0 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=1 if hasanykid==0 | (flag_2_any_kid==. & child==0)

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 | married==1 | partner==1
replace flag_3_any_kid_married =1 if flag_2_any_kid==1 & married==0 & partner==0
replace flag_3=0 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)

gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 | parent_liv==1
replace flag_4_any_kid_married_parent =1 if flag_3_any_kid_married==1 & parent_liv==0

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=1 if flag_4_any_kid_married_parent==1 & liv_sib==0

/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

replace n_i=0 if n_i==.
gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

replace n_f=0 if n_f==.
gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

replace n_p=0 if n_p==.
gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

replace n_hp=0 if n_hp==.
gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==0
replace n_hp_cat=2 if n_hp==1
replace n_hp_cat=3 if n_hp>=2 & !missing(n_hp)
label define tothlp 1 "0" 2 "1" 3 "2+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox

foreach x in hlphrs_s hlphrs_u hlphrs_i hlphrs_k hlphrs_p kid_adult_hlphrs ksp_hlphrs kid_adult_sp_hlphrs{
gen `x'_wk=0
replace `x'_wk=`x'/4.29
}

gen hlphrs_f_wk=hlphrs_i_wk+hlphrs_p_wk
label var hlphrs_f_wk "Hours of help from total helpers (formal and informal), per week"

label var hlphrs_i "Hours of help from total informal helpers (spouse and other), per week"
label var hlphrs_p "Hours of help from paid helpers (excludes institutional employees), per week"

gen hlphrs_i_wk_com=hlphrs_i_wk if nhres_n1==0
gen hlphrs_p_wk_com=hlphrs_p_wk if nhres_n1==0


foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
//label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
//label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1--- 1 minus used here to get inverse. 
/////


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comparison between male and female groups")


//table 2
/////

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=`r(mean)'*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important  

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2
capture drop adl_index_core_cat3

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)
label var n_ins "Number of institutional helpers"
//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")



drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy: reg `x' flag_3_any_kid_married if died_one_year==1 & age1>=50 & commdwell==1
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core


local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop (if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat0 "ADL: 0 core"
label var adl_index_core_cat1 "ADL:1-2 core" 
label var adl_index_core_cat2 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbors: Never or almost never"

label var age1 "Age"

local m1  age1 female race education1 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs /*depr_exit n_i_cat1 n_i_cat2*/

local m3 /*isolated liv_alone paid_helper discuss  dexp */


svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, all") title("Weighted Logit Model on Hospital Death") merge replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, CD") merge ///
replace
/*
svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

*/

svy: prop female

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable eq_merge replace 

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable merge ///
 eq_merge replace

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") merge ///
 eq_merge addtable note("Home is the referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Full Sample Weighted") replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") addtable eq_merge replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge replace addtable

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge addtable note("Home is referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Community Dwelling Sample Weighted") replace 


H="2/1/ kinless tables"
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\HRS\base_data\Rand downloads\randhrs1992_2016v2.dta" , clear 

keep hhidpn r*mpart
rename r*mpart part_*

reshape long part_, i(hhidpn) j(year)


local b=0
forvalues i=1/13{
replace year=1992+`b' if year==`i'
local b=`b'+2
}


rename year core_year
gen partner=.
replace partner=0 if part_==0
replace partner=1 if part_==1
tab partner


tempfile partner
save "`partner'"

clear all

global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit.dta", clear

destring id, gen(hhidpn)

merge 1:1 hhidpn core_year using "`partner'",  keepusing(partner) keep(master match) nogen

svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
//drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

//Flags defined as being Kinless 

gen flag_1_biol_kid = .
replace flag_1_biol_kid=0 if hasownkid==1
replace flag_1_biol_kid=1 if hasownkid==0

gen flag_2_any_kid = .
replace flag_2_any_kid=0 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=1 if hasanykid==0 | (flag_2_any_kid==. & child==0)

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 | married==1 | partner==1
replace flag_3_any_kid_married =1 if flag_2_any_kid==1 & married==0 & partner==0
replace flag_3=0 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)

gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 | parent_liv==1
replace flag_4_any_kid_married_parent =1 if flag_3_any_kid_married==1 & parent_liv==0

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=1 if flag_4_any_kid_married_parent==1 & liv_sib==0

/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

replace n_i=0 if n_i==.
gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

replace n_f=0 if n_f==.
gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

replace n_p=0 if n_p==.
gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

replace n_hp=0 if n_hp==.
gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==0
replace n_hp_cat=2 if n_hp==1
replace n_hp_cat=3 if n_hp>=2 & !missing(n_hp)
label define tothlp 1 "0" 2 "1" 3 "2+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox

foreach x in hlphrs_s hlphrs_u hlphrs_i hlphrs_k hlphrs_p kid_adult_hlphrs ksp_hlphrs kid_adult_sp_hlphrs{
gen `x'_wk=0
replace `x'_wk=`x'/4.29
}

gen hlphrs_f_wk=hlphrs_i_wk+hlphrs_p_wk
label var hlphrs_f_wk "Hours of help from total helpers (formal and informal), per week"

label var hlphrs_i "Hours of help from total informal helpers (spouse and other), per week"
label var hlphrs_p "Hours of help from paid helpers (excludes institutional employees), per week"

gen hlphrs_i_wk_com=hlphrs_i_wk if nhres_n1==0
gen hlphrs_p_wk_com=hlphrs_p_wk if nhres_n1==0


foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
//label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
//label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1--- 1 minus used here to get inverse. 
/////


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comparison between male and female groups")


//table 2
/////

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=`r(mean)'*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important  

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2
capture drop adl_index_core_cat3

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)
label var n_ins "Number of institutional helpers"
//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married  
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")



drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core


local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop (if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat0 "ADL: 0 core"
label var adl_index_core_cat1 "ADL:1-2 core" 
label var adl_index_core_cat2 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbors: Never or almost never"

label var age1 "Age"

local m1  age1 female race education1 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs /*depr_exit n_i_cat1 n_i_cat2*/

local m3 /*isolated liv_alone paid_helper discuss  dexp */


svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, all") title("Weighted Logit Model on Hospital Death") merge replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, CD") merge ///
replace
/*
svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

*/

svy: prop female

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable eq_merge replace 

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable merge ///
 eq_merge replace

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") merge ///
 eq_merge addtable note("Home is the referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Full Sample Weighted") replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") addtable eq_merge replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge replace addtable

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge addtable note("Home is referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Community Dwelling Sample Weighted") replace 

 
 

svy, subpop(if died_one_year==1 & age1>=50): prop location_of_death
 
svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): prop location_of_death



 

H="Sensitivity dataset rerun"
//sensitivity 

use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\HRS\base_data\Rand downloads\randhrs1992_2016v2.dta" , clear 

keep hhidpn r*mpart
rename r*mpart part_*

reshape long part_, i(hhidpn) j(year)


local b=0
forvalues i=1/13{
replace year=1992+`b' if year==`i'
local b=`b'+2
}


rename year core_year
gen partner=.
replace partner=0 if part_==0
replace partner=1 if part_==1
tab partner


tempfile partner
save "`partner'"

clear all

global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit_sens.dta", clear

destring id, gen(hhidpn)

merge 1:1 hhidpn core_year using "`partner'",  keepusing(partner) keep(master match) nogen

svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
//drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

//Flags defined as being Kinless 

gen flag_1_biol_kid = .
replace flag_1_biol_kid=0 if hasownkid==1
replace flag_1_biol_kid=1 if hasownkid==0 | exit==1

gen flag_2_any_kid = .
replace flag_2_any_kid=0 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=1 if (hasanykid==0 | (flag_2_any_kid==. & child==0)) | exit==1

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 | married==1 | partner==1
replace flag_3_any_kid_married =1 if (flag_2_any_kid==1 & married==0 & partner==0) | exit==1
replace flag_3=0 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)

gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 | parent_liv==1
replace flag_4_any_kid_married_parent =1 if (flag_3_any_kid_married==1 & parent_liv==0) | exit==1

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=1 if (flag_4_any_kid_married_parent==1 & liv_sib==0) | exit==1



/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

replace n_i=0 if n_i==.
gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

replace n_f=0 if n_f==.
gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

replace n_p=0 if n_p==.
gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

replace n_hp=0 if n_hp==.
gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==0
replace n_hp_cat=2 if n_hp==1
replace n_hp_cat=3 if n_hp>=2 & !missing(n_hp)
label define tothlp 1 "0" 2 "1" 3 "2+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox

foreach x in hlphrs_s hlphrs_u hlphrs_i hlphrs_k hlphrs_p kid_adult_hlphrs ksp_hlphrs kid_adult_sp_hlphrs{
gen `x'_wk=0
replace `x'_wk=`x'/4.29
}

gen hlphrs_f_wk=hlphrs_i_wk+hlphrs_p_wk
label var hlphrs_f_wk "Hours of help from total helpers (formal and informal), per week"

label var hlphrs_i "Hours of help from total informal helpers (spouse and other), per week"
label var hlphrs_p "Hours of help from paid helpers (excludes institutional employees), per week"

gen hlphrs_i_wk_com=hlphrs_i_wk if nhres_n1==0
gen hlphrs_p_wk_com=hlphrs_p_wk if nhres_n1==0


foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
//label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
//label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1--- 1 minus used here to get inverse. 
/////


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=(1-`r(mean)')*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables_sens.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comparison between male and female groups")


//table 2
/////

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		svy, subpop(if died_one_year==1 & age1>=50): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=50  
		mat tab[`r',4]=`r(mean)'*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important  

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2
capture drop adl_index_core_cat3

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)
label var n_ins "Number of institutional helpers"
//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50): reg `x' flag_3_any_kid_married  
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")



drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core


local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop (if died_one_year==1 & age1>=50 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=50 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=50 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=50 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat0 "ADL: 0 core"
label var adl_index_core_cat1 "ADL:1-2 core" 
label var adl_index_core_cat2 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbors: Never or almost never"

label var age1 "Age"

local m1  age1 female race education1 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs /*depr_exit n_i_cat1 n_i_cat2*/

local m3 /*isolated liv_alone paid_helper discuss  dexp */


svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, all") title("Weighted Logit Model on Hospital Death") merge replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, CD") merge ///
replace
/*
svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=50): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

*/

svy: prop female

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable eq_merge replace 

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable merge ///
 eq_merge replace

svy, subpop(if died_one_year==1 & age1>=50): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") merge ///
 eq_merge addtable note("Home is the referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Full Sample Weighted") replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") addtable eq_merge replace


svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge replace addtable

svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge addtable note("Home is referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Community Dwelling Sample Weighted") replace 

 
 

svy, subpop(if died_one_year==1 & age1>=50): prop location_of_death
 
svy, subpop(if died_one_year==1 & age1>=50 & nhres_n1!=1): prop location_of_death



 

H="changed sample analysis based off comments"
//sensitivity 

use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\HRS\base_data\Rand downloads\randhrs1992_2016v2.dta" , clear 

keep hhidpn r*mpart
rename r*mpart part_*

reshape long part_, i(hhidpn) j(year)


local b=0
forvalues i=1/13{
replace year=1992+`b' if year==`i'
local b=`b'+2
}


rename year core_year
gen partner=.
replace partner=0 if part_==0
replace partner=1 if part_==1
tab partner


tempfile partner
save "`partner'"

clear all

global final "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless"
global int_share "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\int_share"


clear
use "J:\Geriatrics\PCare\HRS Projects\Data & Project-based (reference docs, etc)\Student Projects\Natalie Kinless\kinless_natalie_exit_sens.dta", clear

destring id, gen(hhidpn)

merge 1:1 hhidpn core_year using "`partner'",  keepusing(partner) keep(master match) nogen

svyset secu [pweight=regwt], strata(stratum)
replace stratum=53 if stratum>53
//Restrict dataset to those who died within one year of their last core interview and those 50 and older:
//drop if died_one_year!=1
//drop if age1<50

//child variable
gen child_bin=.
replace child_bin=0 if child==0
replace child_bin=1 if child>=1


//Labeling missing mother and father variables
label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath

//Making parent_liv variable
gen parent_liv = .
replace parent_liv = 0 if mother_liv==0 & father_liv==0
replace parent_liv = 1 if mother_liv >0 | father_liv >0
//Define parent variable this way^ because missing mother_liv and father_liv are defined as -1

gen race1=1 if white==1
replace race1=2 if black==1
replace race1=3 if hisp_eth==1
replace race1=4 if other_na_api_race==1
label define race1 1 "White" 2 "Black" 3 "Hispanic Eth" 4 "Other"
label value race1 race1 

//8/30/19--ebl--must set has variables to zero if missing (missing if never had children on file)
foreach x in hasown hasany {
	replace `x'=0 if missing(`x')
}

//Flags defined as being Kinless 

gen flag_1_biol_kid = .
replace flag_1_biol_kid=0 if hasownkid==1
replace flag_1_biol_kid=1 if hasownkid==0 

gen flag_2_any_kid = .
replace flag_2_any_kid=0 if hasanykid==1 | (flag_2_any_kid==. & child>=1)
replace flag_2_any_kid=1 if (hasanykid==0 | (flag_2_any_kid==. & child==0))

gen flag_3_any_kid_married = .
replace flag_3_any_kid_married =0 if flag_2_any_kid==0 | married==1 | partner==1
replace flag_3_any_kid_married =1 if (flag_2_any_kid==1 & married==0 & partner==0) 
replace flag_3=0 if inlist(proxy_relat_exit, 2, 3, 5, 6, 8)

gen flag_4_any_kid_married_parent =.
replace flag_4_any_kid_married_parent =0 if flag_3_any_kid_married==0 | parent_liv==1
replace flag_4_any_kid_married_parent =1 if (flag_3_any_kid_married==1 & parent_liv==0) 

gen liv_sib=.
replace liv_sib=1 if liv_bro==1 | liv_sis==1
replace liv_sib=0 if liv_bro==0 & liv_sis==0

gen flag_5_any_kid_married_par_sibs=.
replace flag_5_any_kid_married_par_sibs=0 if flag_4_any_kid_married_parent==0 | liv_sib==1
replace flag_5_any_kid_married_par_sibs=1 if (flag_4_any_kid_married_parent==1 & liv_sib==0) 



/*label define moth -1 missing
label value mother_liv moth
label define fath -1 missing
label value father_liv fath*/

gen over65=.
replace over65=0 if age1<65
replace over65=1 if age1>=65

gen race=.
replace race=1 if white==1
replace race=0 if black==1 | hisp_eth==1 | other_na_api_race==1
label define rac 1 "non-hispanic white" 0 "racial minority"
label values race rac

gen education=.
replace education=0 if degree==0
replace education=1 if degree==1 | degree==2
replace education=2 if degree==3 | degree==4 | degree==5 | degree==6
label define deg 0 "less than high school" 1 "high school or equivalent" 2 "college or graduate"
label value education deg

gen marital_bin=.
replace marital_bin=1 if marital==1
replace marital_bin=0 if marital>1 & marital<=5

gen commdwell=.
replace commdwell=1 if nhres_n1==0
replace commdwell=0 if nhres_n1==1

gen lowest_wealth_quartile=.
replace lowest_wealth_quartile=1 if nw_quart==1
replace lowest_wealth_quartile=0 if nw_quart==2 | nw_quart==3 | nw_quart==4

gen health=.
replace health=1 if srh>=1 & srh<=3
replace health=0 if srh>=4 & srh<=5
label define heal 0 "fair, poor" 1 "excellent, very good, good"
label value health heal

gen imprelig_edit=.
replace imprelig_edit=1 if imprelig==1
replace imprelig_edit=2 if imprelig==2
replace imprelig_edit=3 if imprelig==3
label define rel 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important"
label value imprelig_edit imprelig

gen religion_not_too_important=.
replace religion_not_too_important=1 if imprelig_edit==3
replace religion_not_too_important=0 if imprelig_edit==1 | imprelig_edit==2

gen hospital_death=.
replace hospital_death=1 if location_of_death==1
replace hospital_death=0 if location_of_death<=7 & location_of_death>=2 & location_of_death!=8 

gen location_edited=.
replace location_edited = 1 if location_of_death==1
replace location_edited = 2 if location_of_death==2
replace location_edited = 3 if location_of_death==3 | location_of_death==4 | location_of_death==5 | location_of_death==7
label define loc 1 "hospital" 2 "nursing home" 3 "home/hospice/assisted living/retirement/other"
label value location_edited loc

gen adl_index_core_cat=.
replace adl_index_core_cat=0 if adl_index_core==0
replace adl_index_core_cat=1 if adl_index_core==1 | adl_index_core==2
replace adl_index_core_cat=2 if adl_index_core>=3 & !missing(adl_index_core)
label define adl_groups_core 0 "0" 1 "1-2" 2 "3+"
label value adl_index_core_cat adl_groups_core

gen adl_index_exit_cat=.
replace adl_index_exit_cat=0 if adl_index==0
replace adl_index_exit_cat=1 if adl_index==1 | adl_index==2
replace adl_index_exit_cat=2 if adl_index>=3 & !missing(adl_index)
label define adl_groups_exit 0 "0" 1 "1-2" 2 "3+"
label value adl_index_exit_cat adl_groups_exit

replace n_i=0 if n_i==.
gen n_i_cat=.
replace n_i_cat=0 if n_i==0
replace n_i_cat=1 if n_i==1
replace n_i_cat=2 if n_i>=2 & !missing(n_i)
label define nicat 0 "0" 1 "1" 2 "2+"
label value n_i_cat nicat

replace n_f=0 if n_f==.
gen n_f_bin=.
replace n_f_bin=0 if n_f==0
replace n_f_bin=1 if n_f>=1 & !missing(n_f)

replace n_p=0 if n_p==.
gen paid_helpers=.
replace paid_helpers=0 if n_p==0
replace paid_helpers=1 if n_p>=1 & n_p<=6

replace n_hp=0 if n_hp==.
gen n_hp_cat=.
replace n_hp_cat=1 if n_hp==0
replace n_hp_cat=2 if n_hp==1
replace n_hp_cat=3 if n_hp>=2 & !missing(n_hp)
label define tothlp 1 "0" 2 "1" 3 "2+"
label value n_hp_cat tothlp

gen comor_c_hrs_edit=.
replace comor_c_hrs_edit=comor_c_hrs
replace comor_c_hrs_edit=2 if comor_c_hrs==2 | comor_c_hrs==3
label define comor 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6) or Severe(>7)"
label value comor_c_hrs_edit comor

gen duration_edit=.
replace duration_edit=1 if duration==1 | duration==2
replace duration_edit=2 if duration==3
replace duration_edit=3 if duration==4
replace duration_edit=4 if duration==5
replace duration_edit=5 if duration==6
label define dur 1 "sudden" 2 "<1 week" 3 "<1 month" 4 "<1 year" 5 ">1 year"
label values duration_edit dur

gen isolated=.
replace isolated=1 if soc_visit_cat==0 | soc_visit_cat==1
replace isolated=0 if soc_visit_cat==2 | soc_visit_cat==3

gen discuss_edit=.
replace discuss_edit=0 if discuss==0
replace discuss_edit=1 if discuss==1

gen lwill_edit=.
replace lwill_edit=0 if lwill==0
replace lwill_edit=1 if lwill==1

gen hcp_edit=.
replace hcp_edit=0 if hcp==0
replace hcp_edit=1 if hcp==1

label define prox 2 "spouse/partner" 3 "son" 4 "stepson or son of partner" 5 "spouse/partner of daughter" 6 "daughter" 7 "stepdaughter or daughter of partner" 8 "spouse/partner of son" 9 "grandchild of R or SP/P" 15 "brother" 17 "sister" 19 "other relative" 20 "other individual" 23 "paid helper" 24 "professional" 33 "spouse/partner of grandchild" 98 "don't know; not ascertained" 99 "refused"
label values proxy_relat_exit prox

gen proxy_relat_exit_edit=.
replace proxy_relat_exit_edit=1 if proxy_relat_exit==2
replace proxy_relat_exit_edit=2 if proxy_relat_exit==3 | proxy_relat_exit==5 | proxy_relat_exit==6 | proxy_relat_exit==8
replace proxy_relat_exit_edit=3 if proxy_relat_exit==4 | proxy_relat_exit==7
replace proxy_relat_exit_edit=4 if proxy_relat_exit==9 | proxy_relat_exit==19
replace proxy_relat_exit_edit=5 if proxy_relat_exit==15
replace proxy_relat_exit_edit=6 if proxy_relat_exit==17
replace proxy_relat_exit_edit=7 if proxy_relat_exit==20 | proxy_relat_exit==23 | proxy_relat_exit==24
label define exitprox 1 "spouse/partner" 2 "daughter/son/in-law children" 3 "stepchildren or children of partner" 4 "other relative" 5 "brother" 6 "sister" 7 "professional or other individual"
label values proxy_relat_exit_edit exitprox

foreach x in hlphrs_s hlphrs_u hlphrs_i hlphrs_k hlphrs_p kid_adult_hlphrs ksp_hlphrs kid_adult_sp_hlphrs{
gen `x'_wk=0
replace `x'_wk=`x'/4.29
}

gen hlphrs_f_wk=hlphrs_i_wk+hlphrs_p_wk
label var hlphrs_f_wk "Hours of help from total helpers (formal and informal), per week"

label var hlphrs_i "Hours of help from total informal helpers (spouse and other), per week"
label var hlphrs_p "Hours of help from paid helpers (excludes institutional employees), per week"

gen hlphrs_i_wk_com=hlphrs_i_wk if nhres_n1==0
gen hlphrs_p_wk_com=hlphrs_p_wk if nhres_n1==0


foreach x in education location_edited adl_index_core_cat adl_index_exit_cat n_i_cat n_hp_cat comor_c_hrs_edit duration_edit pain_level_hrs soc_visit_cat proxy_relat_exit_edit{
tab `x', gen(`x')
}

////// Labels created as No, becuase that is what is in table. Thus used "1-" in table
label var female "Female"
label variable hasownkid "No Biological Children"
label variable hasanykid "No Children of any type"
label variable married "No Spouse"
label variable parent_liv "No Parents"
label variable liv_sib "No Siblings"
label variable flag_1_biol_kid "No Biological Children"
label variable flag_2_any_kid "No Children of any type"
label variable flag_3_any_kid_married "No children of any type or spouse"
label variable flag_4_any_kid_married_parent "No children of any type, spouse, or parents"
label variable flag_5_any_kid_married_par_sibs "No children of any type, spouse, parents, or siblings"
////////

label var over65 "65 and over"
label var female "Female"
label var race "Race: White"
label var education1 "Less than HS" 
label var education2 "HS or equivalent"
label var education3 "College or Graduate" 
label var marital_bin "Married"
label var nhres_n1 "NH Resident at last core ivw"
label var commdwell "Community Dwelling"
label var lowest_wealth_quartile "Lowest Wealth Quartile"
label var health "SR Health=excellent/very good/good"
label var medicaid "Medicaid"
label var medicare "Medicare" 
label var northeast "Northeast" 
label var midwest "Midwest" 
label var south "South"
label var west "West"
label var religion_not_too_important "Religion not too Important"
label var location_edited1 "Place of Death: Hospital"
label var location_edited2 "Place of Death: Nursing Home" 
label var location_edited3 "Place of Death: Home/Hospice/Assisted living/Retirement"
label var adl_index_core_cat1 "ADL: 0 core"
label var adl_index_core_cat2 "ADL:1-2 core" 
label var adl_index_core_cat3 "ADL: 3+ core"
label var adl_index_exit_cat1 "ADL: 0 exit"
label var adl_index_exit_cat2 "ADL: 1-2 exit"
label var adl_index_exit_cat3 "ADL: 3+ core"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2"
label var n_i_cat3 "Total Informal Helpers: 3+"
label var n_f_bin "Formal Helpers" 
label var paid_helpers "Paid Helpers" 
label var n_hp_cat1 "Total number of helpers: 1"
label var n_hp_cat2 "Total number of helpers: 2"
label var n_hp_cat3 "Total number of helpers: 3+"
label var hh_worker "Home Health Worker Helper"
label var comor_c_hrs_edit1 "Comorbidities: 0"
label var comor_c_hrs_edit2 "Comorbidities: 1-3"
label var comor_c_hrs_edit3 "Comorbidities: 4+"
label var prob_dem "Probable Dementia"
label var duration_edit1 "Duration of final illness: Sudden"
label var duration_edit2 "Duration of final illness: <1 week"
label var duration_edit3 "Duration of final illness: <1 month"
label var duration_edit4 "Duration of final illness: <1 year"
label var duration_edit5 "Duration of final illness: >1 year"
label var pain_hrs "Troubled by pain"
label var pain_level_hrs1 "How bad was pain: Moderate"
label var pain_level_hrs2 "How bad was pain: Mild" 
label var pain_level_hrs3 "How bad was pain: Severe" 
label var soc_visit_cat1 "Social visits: none or almost never"
label var soc_visit_cat2 "Social visits: less than 1/week"
label var soc_visit_cat3 "Social visits: less than every day up to 1x/week"
label var soc_visit_cat4 "Social visits: every day or more"
label var isolated "Social Isolation"
label var discuss_edit " Discussion of EOL Care Preferences" 
label var lwill_edit "Living Will"
label var hcp_edit "Health Care Proxy"
label var hospice_full "Hospice Utilization" 
label var proxy_relat_exit_edit1 "Proxy Relationship: Spouse/partner"
label var proxy_relat_exit_edit2 "Proxy Relationship: daughter/son/in-law children"
label var proxy_relat_exit_edit3 "Proxy Relationship: stepchildren or children of partner"
label var proxy_relat_exit_edit4 "Proxy Relationship: other relative"
label var proxy_relat_exit_edit5 "Proxy Relationship: brother"
label var proxy_relat_exit_edit6 "Proxy Relationship: sister"
label var proxy_relat_exit_edit7 "Proxy Relationship: professional or other individual"
//label var hlphrs_i_com "Hours of help from total informal helpers (spouse and other), Community Dwelling"
//label var hlphrs_p_com "Hours of help from paid helpers (excludes institutional employees), Community Dwelling"

gen iadl_dep_core=.
replace iadl_dep_core=0 if iadl_ind_core==0
replace iadl_dep_core=1 if !missing(iadl_ind_core) & iadl_ind_core>0
label var iadl_dep_core "IADL Dependent, core"
gen n=1


//table 1--- 1 minus used here to get inverse. 
/////


local kid hasownkid hasanykid married parent_liv liv_sib 
local rn: word count `kid'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kid'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=(1-`r(mean)')*100
		svy, subpop(if died_one_year==1 & age1>=51): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=51  
		mat tab[`r',4]=(1-`r(mean)')*100
	local r=`r'+1
	
}



mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kid'
mat list tab

frmttable using "${int_share}/tables_sens.rtf", replace statmat(tab) title("Table 1 Kin Categories") sdec(2) varlabels  note("Comparison between male and female groups")


//table 2
/////

local kin_con flag_1_biol_kid flag_2_any_kid flag_3_any_kid_married flag_4_any_kid_married_parent flag_5_any_kid_married_par_sibs

local rn: word count `kin_con'

mat tab=J(`rn', 4,.)
mat stars=J(`rn', 5, 0)

local r=1 
local c=1

foreach x in `kin_con'{
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if female==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'*100
		svy, subpop(if died_one_year==1 & age1>=51): tab `x' female 
		mat tab[`r',3]=e(p_Pear)
		local c=`c'+1
		}
		sum `x' [aw=regwt] if died_one_year==1 & age1>=51  
		mat tab[`r',4]=`r(mean)'*100
	local r=`r'+1
}

mat colnames tab= "Male" "Female" "P-value" "Total"
mat rownames tab= `kin_con'
mat list tab

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 2 Kin Constellations") sdec(2) varlabels addtable

//


local cvar1 age 

local ivar1 female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important isolated

local cat1 adl_index_core_cat

local ivar2 iadl_dep_core

local cvar2 comor_in_hrs

local ivar3 prob_dem pain_hrs cesd1 cesd_tot_ge3


local rn: word count `cvar1' `ivar1' `cat1' `cvar2' `ivar2' `ivar3' 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}
capture drop adl_index_core_cat0 
capture drop adl_index_core_cat1 
capture drop adl_index_core_cat2
capture drop adl_index_core_cat3

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
foreach x in `cvar2'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): reg `x' flag_3_any_kid_married
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar2' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in `ivar3' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `cvar1' "Age SD" `ivar1' "ADL 0 core" "ADL 1-2 core" "ADL 3+ core" `cvar2' "Comorbidities SD" `ivar2' `ivar3' "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 3 Kin Characteristics") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


label var n_i_cat "# of informal helpers(spouse and others)"

/*gen n_hp_cat=1 if n_hp==1
replace n_hp_cat=2 if n_hp==2
replace n_hp_cat=3 if n_hp>=3 & !missing(n_hp)
*/
gen n_ins=n_f- n_p
gen n_ins_cat=0 if n_ins==0
replace n_ins_cat=1 if n_ins==1
replace n_ins_cat=2 if n_ins>=2 & !missing(n_ins)
label var n_ins "Number of institutional helpers"
//Table 4 

drop n_i_cat1 n_i_cat2 n_i_cat3 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat4 n_hp_cat1 n_hp_cat2 n_hp_cat3 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 


local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Community Dwelling") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop n_i_cat0 n_i_cat1 n_i_cat2 soc_visit_cat1 soc_visit_cat2 soc_visit_cat3 soc_visit_cat0 n_hp_cat1 n_hp_cat2 n_hp_cat3 n_ins_cat0 n_ins_cat1 n_ins_cat2 

local ivar1 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit  duration_edit5 friend isolated icu vent n_f_bin paid_helpers soc_visit

local cat1 n_hp_cat 
local cat3 n_i_cat 
local cat4 n_ins_cat

local cvar1 hlphrs_i_wk hlphrs_p_wk hlphrs_f_wk
local cat2 soc_visit_cat 

 
local rn: word count `ivar1' `cat1' `cat3' `cat4' `cvar1' `cat2' 1 1 1 1 1 1 1 1 1 1 1 1 1 1

mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 

foreach x in `ivar1' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat3{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars3 `cativars3' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat3 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3
local c=1
foreach x of local cat4{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars4 `cativars4' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat4 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-3
}
	}

local r=`r'+3


foreach x in `cvar1'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

	foreach x of local cat2{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars2 `cativars2' ``x''
	}
	
foreach y in 0 1 {
    foreach x of local cat2 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-4
}
	}

local r=`r'+4

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}
	
mat rownames tab = `ivar1' "Total number of hlprs 0" "Total number of hlprs 1" "Total number of hlprs 2+" "Total number of inf hlprs 0" "Total number of inf hlprs 1" "Total number of inf hlprs 2+" "Total number of ins hlprs 0" "Total number of ins hlprs 1" "Total number of ins hlprs 2+" "Hrs from inf hlprs" "Hrs from inf hlprs SD" "Hrs of hlp from paid hlprs" "Hrs of hlp from paid hlprs SD" "Hrs of hlp from total hlprs" "Hrs of hlp from total hlprs SD"  "Soc vis none/almost never" " Soc vis less than 1/week" "Soc vis < every day to 1/week" "Soc vis every day" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 4 Kin Characteristics, Nursing Home") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type" "Informal Helpers are spouses and other" "Paid Helpers excludes institutional employees")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51): reg `x' flag_3_any_kid_married  
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, Full Sample") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")



drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core

local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

	
foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==1): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==1
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1


foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==1
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, CD") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")


drop proxy_relat_exit_edit1 proxy_relat_exit_edit2 proxy_relat_exit_edit3 proxy_relat_exit_edit4 proxy_relat_exit_edit5 proxy_relat_exit_edit6 proxy_relat_exit_edit7 

local cvar months_bet
local cat1  proxy_relat_exit_edit
local ivar proxy_core


local rn: word count `cvar' `ivar' `cat1' 1 1 1 1 1 1 1 1 1 
mat tab=J(`rn', 3,.)
mat stars=J(`rn', 3, 0)

local r=1 
local c=1 
foreach x in `cvar'{
local c=1 
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(mean)'
		mat tab[`r'+1,`c']=`r(sd)'
		local c=`c'+1
		}
	local c=1
	svy, subpop (if died_one_year==1 & age1>=51 & commdwell==0): reg `x' flag_3_any_kid_married 
	test flag_3_any_kid_married
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.01) + (r(p)<.05)
	local r=`r'+2
	}

foreach x in `ivar' {
local c=1
	forvalues i=0/1{
		sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(mean)'*100
		local c=`c'+1
		}
	local c=1
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
	mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
	local r=`r'+1
}

foreach x of local cat1{
	local `x'	
	levelsof `x', local(levels)
	foreach l of local levels {
		gen `x'`l'=`x'==`l' if !missing(`x')
        local lab : label `x' `l'
        label var `x'`l' "`lab'"
        local `x' ``x'' `x'`l'
}
	di "``x''"
   local cativars1 `cativars1' ``x''
	}

foreach y in 0 1 {
    foreach x of local cat1 {
	if "`y'"=="1" {
	svy, subpop(if died_one_year==1 & age1>=51 & commdwell==0): tab `x' flag_3_any_kid_married
    mat tab[`r',3]=e(p_Pear)
	mat stars[`r',3]=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
	foreach z of local `x' {
		sum `z' [aw=regwt] if inlist(flag_3_any_kid_married,`y') & died_one_year==1 & age1>=51 & commdwell==0
        mat tab[`r',`c']=r(mean)*100
        local r=`r'+1
}
local c=`c'+1
local r=`r'-7
}
	}

local r=`r'+7
local c=1

foreach x in n {
local c=1
	forvalues i=0/1{
sum `x' [aw=regwt] if flag_3_any_kid_married==`i' & died_one_year==1 & age1>=51 & commdwell==0
		mat tab[`r',`c']=`r(N)'
		mat tab[`r'+1,`c']=`r(sum)'
		local c=`c'+1
		}
	}

mat rownames tab = `cvar' "Months between SD" `ivar' "Proxy Relationship: Spouse/partner" "Proxy Relationship: daughter/son/in-law children" "Proxy Relat: stepchild or child of partner" "Proxy Relationship: other relative" "Proxy Relationship: brother" "Proxy Relationship: sister" "Proxy Relationship: professional or other individual" "N" "Estimate"
mat colnames tab = "Has Kin" "Kinless" "P-value"
mat list tab
mat list stars

frmttable using "${int_share}/tables_sens.rtf", statmat(tab) title("Table 5 Proxy, NH") ///
sdec(2) varlabels addtable annotate(stars) asymbol(*,**) note("Kin is defined by having a Spouse or Child of any type")
/*
local vars age female race education1 marital_bin lowest_wealth_quartile health medicaid liv_alone nhres_n1 religion_not_too_important adl_index_core_cat iadl_dep_core comor_in_hrs prob_dem pain_hrs cesd1 cesd_tot_ge3 location_edited1 location_edited2 location_edited3 hosp_last_2yr discuss_edit lwill_edit advdir hcp_edit hospice_full dyspnea_hrs no_appet_hrs vomit_hrs delirium_exit fatigue_hrs depr_exit duration_edit1 duration_edit2 duration_edit3 duration_edit4 duration_edit5 friend isolated n_i_cat hlphrs_i hlphrs_i_com hlphrs_p hlphrs_p_com soc_visit_cat

local rn: word count `vars'
 mat cor=J(`rn', `rn', 0)
 cor `vars'

 mat cor=r(C) 
 mat rownames cor=`vars'
 mat colnames cor=`vars'
 frmttable using cor.rtf, statmat(cor) sdec(2) varlabels replace
 */
 
label var adl_index_core_cat0 "ADL: 0 core"
label var adl_index_core_cat1 "ADL:1-2 core" 
label var adl_index_core_cat2 "ADL: 3+ core"

label var n_i_cat0 "Total Informal Helpers: 0"
label var n_i_cat1 "Total Informal Helpers: 1"
label var n_i_cat2 "Total Informal Helpers: 2+"
label var soc_visit_cat0 "Social Visits w/ Neighbors: Never or almost never"

label var age1 "Age"

local m1  age1 female race education1 lowest_wealth_quartile
local m2 medicaid adl_index_core_cat1 adl_index_core_cat2 prob_dem comor_in_hrs /*depr_exit n_i_cat1 n_i_cat2*/

local m3 /*isolated liv_alone paid_helper discuss  dexp */


svy, subpop(if died_one_year==1 & age1>=51): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, all") title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' , or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 1, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=51): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, all") title("Weighted Logit Model on Hospital Death") merge replace 

svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): logit  hospital_death flag_3_any_kid_married `m1' `m2' `m3', or
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Model 2, CD") merge ///
replace
/*
svy, subpop(if died_one_year==1 & age1>=51): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): logit  hospital_death isolated `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

svy, subpop(if died_one_year==1 & age1>=51): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p) ctitles("" "Model 3, all") merge title("Weighted Logit Model on Hospital Death") replace 

svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): logit  hospital_death liv_alone `m1' `m2' `m3'
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p ) ctitles("" "Model 3, CD") merge ///
replace

*/

svy: prop female

svy, subpop(if died_one_year==1 & age1>=51): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable eq_merge replace 

svy, subpop(if died_one_year==1 & age1>=51): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") addtable merge ///
 eq_merge replace

svy, subpop(if died_one_year==1 & age1>=51): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, all" "NH vs. Home, all") merge ///
 eq_merge addtable note("Home is the referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Full Sample Weighted") replace


svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married, base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") addtable eq_merge replace


svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge replace addtable

svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): mlogit location_edited flag_3_any_kid_married `m1' `m2', base(3) rrr
outreg using "${int_share}/model_sens.rtf", varlabels stats(e_b p e_ci) ctitles("" "Hospital vs. Home, CD" "NH vs. Home, CD") merge ///
 eq_merge addtable note("Home is referent category" \ "Death at home includes Hospice, Assisted living, & Retirement") title("Multinomial Logit Community Dwelling Sample Weighted") replace 

 
 

svy, subpop(if died_one_year==1 & age1>=51): prop location_of_death
 
svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): prop location_of_death

//graph

svy, subpop(if died_one_year==1 & age1>=51): prop flag_2 
 
svy, subpop(if died_one_year==1 & age1>=51 & female==1): prop flag_2
  
svy, subpop(if died_one_year==1 & age1>=51 & female==0): prop flag_2


svy, subpop(if died_one_year==1 & age1>=51): prop married 
 
svy, subpop(if died_one_year==1 & age1>=51 & female==1): prop married 
  
svy, subpop(if died_one_year==1 & age1>=51 & female==0): prop married 


svy, subpop(if died_one_year==1 & age1>=51): prop flag_3 
 
svy, subpop(if died_one_year==1 & age1>=51 & female==1): prop flag_3 
  
svy, subpop(if died_one_year==1 & age1>=51 & female==0): prop flag_3 


svy, subpop(if died_one_year==1 & age1>=51): prop over65
svy, subpop(if died_one_year==1 & age1>=51 & over65==1): prop flag_3

gen hospice_death=0 if location!=.
replace hospice_death=1 if location==4
svy, subpop(if died_one_year==1 & age1>=51 & nhres_n1!=1): prop location_edited

H="Change log"
/*

********************Change Log******************** 



Updates:

03/03/2021 MH
------------
Sensitivity analysis with extra 122 patients who didn't have a exit. 




*/